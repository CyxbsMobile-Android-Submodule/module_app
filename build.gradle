apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply plugin: 'kotlin-kapt'

apply plugin: 'com.aliyun.ams.emas-services'

apply plugin: 'walle'
android {
    compileSdkVersion build_versions.compile_sdk
    buildToolsVersion build_versions.build_tools

    defaultConfig {
        applicationId "com.mredrock.cyxbs"
        minSdkVersion build_versions.min_sdk
        targetSdkVersion build_versions.target_sdk
        versionCode 53
        versionName "5.0.2"
        multiDexEnabled true
        manifestPlaceholders = [UMENG_CHANNEL_VALUE: "official"]

        // LPhotoPicker
        renderscriptTargetApi build_versions.target_sdk
        renderscriptSupportModeEnabled true

        kapt {
            //ARouter
            arguments {
                arg("AROUTER_MODULE_NAME", project.getName())
            }
            javacOptions {
                option("-Xmaxerrs", 500)
            }
        }
    }

    dexOptions {
        preDexLibraries true
        maxProcessCount 8
    }

    dataBinding {
        enabled = true
    }

    signingConfigs {
        config {
            File signingConfigFile = file("../local.properties")
            Properties configs = new Properties()
            configs.load(new FileInputStream(signingConfigFile))

            keyAlias configs['RELEASE_KEY_ALIAS']
            keyPassword configs['RELEASE_KEY_PASSWORD']
            storeFile file("../key-cyxbs")
            storePassword configs['RELEASE_STORE_PASSWORD']
        }
    }

    buildTypes {
        debug {
            minifyEnabled false
            zipAlignEnabled false
            shrinkResources false

            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "official"]

            buildConfigField("String", "BUGLY_APP_ID", "\"68682669e7\"")
            signingConfig signingConfigs.config
        }

        release {
            minifyEnabled true
            zipAlignEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

            buildConfigField("String", "BUGLY_APP_ID", "\"68682669e7\"")
            signingConfig signingConfigs.config

            ndk {
                abiFilters 'armeabi-v7a'
            }
        }
    }

    lintOptions {
        abortOnError false
        disable 'InvalidPackage'

        checkReleaseBuilds false
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    packagingOptions {
        exclude 'LICENSE.txt'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/ASL2.0'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/services/javax.annotation.processing.Processor'
        exclude 'META-INF/MANIFEST.MF'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/rxjava.properties'

        doNotStrip '*/mips/*.so'
        doNotStrip '*/mips64/*.so'
    }
}

walle {
    // 指定渠道包的输出路径
    apkOutputFolder = new File("${project.buildDir}/outputs/channels")
    // 定制渠道包的APK的文件名称
    apkFileNameFormat = '掌上重邮-${channel}-${buildType}-v${versionName}-${versionCode}.apk'
    // 渠道配置文件
    channelFile = new File("${project.getProjectDir()}/channel")
}

dependencies {
    implementation project(':lib_common')
    if (!isSingleModuleDebug.toBoolean()) {
        implementation project(':module_main')
        implementation project(':module_course')
        implementation project(':module_qa')
        implementation project(':module_discover')
        implementation project(':module_mine')
        implementation project(':module_widget')
        implementation project(':module_redrock_home')
        implementation project(':module_freshman')
    }
    kapt deps.arouter.compiler
    api deps.hotfix.runtime
}
